// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  requestedFriends Friendship[] @relation("FriendshipRequester")
  receivedFriends  Friendship[] @relation("FriendshipReceiver")
  sentMessages     Message[]    @relation("SentMessages")
  receivedMessages Message[]    @relation("ReceivedMessages")
}


model Friendship {
  id          Int      @id @default(autoincrement())
  requesterId Int
  receiverId  Int
  status      String   // "pending", "accepted", "rejected"
  createdAt   DateTime @default(now())

  requester User @relation("FriendshipRequester", fields: [requesterId], references: [id])
  receiver  User @relation("FriendshipReceiver", fields: [receiverId], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String
  imageUrl   String?   // optional for images
  createdAt  DateTime  @default(now())

  sender   User @relation("SentMessages", fields: [senderId], references: [id])
  receiver User @relation("ReceivedMessages", fields: [receiverId], references: [id])
}
